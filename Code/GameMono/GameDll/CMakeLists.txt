#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

start_sources()
# -- gamemono.waf_files --
sources_platform(ALL)
add_sources("CryGameMono_uber_0.cpp"
	SOURCE_GROUP "Editor"
		"editor/EditorGame.cpp"
		"editor/EditorGame.h"
	SOURCE_GROUP "Entities"
		"entities/GeomEntity.cpp"
		"entities/GeomEntity.h"
	SOURCE_GROUP "Flownodes"
		"flownodes/FlowBaseNode.h"
		"flownodes/FlowGameEntityNode.cpp"
		"flownodes/FlowGameEntityNode.h"
	SOURCE_GROUP "Game"
		"game/GameRules.cpp"
		"game/Game.cpp"
		"game/GameFactory.cpp"
		"game/GameRules.h"
		"game/Game.h"
		"game/GameFactory.h"
	SOURCE_GROUP "Player"
		"player/Player.cpp"
		"player/Player.h"
	SOURCE_GROUP "Player\\\\Extensions"
		"player/extensions/ViewExtension.cpp"
		"player/extensions/ISimpleExtension.h"
		"player/extensions/ViewExtension.h"
	SOURCE_GROUP "Root"
		"GameMono.cpp"
	SOURCE_GROUP "Startup"
		"startup/GameStartup.cpp"
		"startup/GameStartup.h"
)

add_sources("NoUberFile"
	SOURCE_GROUP "Root"
		"StdAfx.cpp"
		"StdAfx.h"
)

end_sources()
#END-FILE-LIST

CryEngineModule(CryGameMono PCH "StdAfx.cpp" SOLUTION_FOLDER "Projects/GameMono")

target_include_directories( ${THIS_PROJECT} PRIVATE ${CMAKE_SOURCE_DIR}/Code/CryEngine/CryAction )

target_link_libraries( ${THIS_PROJECT} PRIVATE CryLobby )

if (WIN32 OR WIN64)
	target_link_libraries( ${THIS_PROJECT} PRIVATE shell32 Gdi32  )
elseif(DURANGO)
	target_link_libraries( ${THIS_PROJECT} PRIVATE ixmlhttprequest2 Ws2_32 )
endif()

FILE(WRITE "durango_title_id.h" "// Auto generated by CMake\n")
